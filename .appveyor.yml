version: build-{build}

clone_depth: 10

skip_tags: true

image: Visual Studio 2019

environment:
  SIGNTOOL: '"C:\Program Files (x86)\Windows Kits\10\bin\10.0.18362.0\x64\signtool.exe"'
  CSRTPW:
    secure: RGIQP5FFFYx/tICrrkoiJzSXMqDz/R1H+WAAKZ0bo6E=
  matrix:
#    - platform: Win32
#      configuration: Debug
#      PY_DIR: C:/Python38
#    - platform: Win32
#      configuration: Release
#      PY_DIR: C:/Python38
    - platform: x64
      configuration: Debug
      PY_DIR: C:/Python38-x64
    - platform: x64
      configuration: Release
      PY_DIR: C:/Python38-x64

matrix:
  fast_finish: false

init:
  - cmd: set PATH=%PY_DIR%;%PY_DIR%/Scripts;%PATH%
  - cmake --version
  - msbuild /version
  - cmd: reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /v UserAuthentication /t REG_DWORD /d 0 /f
  - cmd: echo "Platform='%env:Platform%'"
  - cmd: set INSTALL_PREFIX=C:/tmp/ci_build 

install:
  - cmd: |
      set LIBZMQ_SOURCEDIR=C:\projects\libzmq
      set LIBZMQ_BUILDDIR=%LIBZMQ_SOURCEDIR%\build
      git clone --depth 1 --quiet https://github.com/zeromq/libzmq.git "%LIBZMQ_SOURCEDIR%"
      md "%LIBZMQ_BUILDDIR%"
  - cmd: |
      set PYTHON_SOURCEDIR=C:\projects\cpython
      git clone https://github.com/python/cpython.git --branch=3.8 --depth=1 "%PYTHON_SOURCEDIR%"
      
before_build:
  - cmd: |
      cd "%LIBZMQ_BUILDDIR%"
      cmake .. -Ax64 -DBUILD_STATIC=OFF -DBUILD_SHARED=ON -DZMQ_BUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX="%INSTALL_PREFIX%"
      cmake --build . --config %Configuration% --target install
  - cmd: |
      python --version
      set GZB_BUILDDIR=%APPVEYOR_BUILD_FOLDER%/build
      set PY_INSTALLDIR=%GZB_BUILDDIR%/bin/%Configuration%/python
      set PY_EXE=python.exe
      set PY_LAYOUTOPTS=--include-dev --include-pip
      md "%PY_INSTALLDIR%"
      cd "%PYTHON_SOURCEDIR%"\PCbuild
      build.bat -p x64      
      IF "%Configuration%" == "Debug" build.bat -p x64 -c Debug
      cd amd64
      .\%PY_EXE% ../../PC/layout -b . -s %PYTHON_SOURCEDIR% %PY_LAYOUTOPTS% --copy %PY_INSTALLDIR%
      IF "%Configuration%" == "Debug" set PY_LAYOUTOPTS=-d --include-dev --include-pip --include-symbols
      IF "%Configuration%" == "Debug" .\%PY_EXE% ../../PC/layout -b . -s %PYTHON_SOURCEDIR% %PY_LAYOUTOPTS% --copy %PY_INSTALLDIR%

build_script:
  - cmd: |
      cd "%APPVEYOR_BUILD_FOLDER%"
      git submodule update --init --recursive
      cd "%GZB_BUILDDIR%"
      cmake .. -Ax64 -DCMAKE_PREFIX_PATH="%INSTALL_PREFIX%" -DPython3_ROOT_DIR="%PY_INSTALLDIR%"
  - cmake --build . --config %Configuration%
#      ctest -C %Configuration% -V
after_build:
  - cmd: cd "%GZB_BUILDDIR%"
  - cmd: |
      echo %CSCRT% > tmp64
      certutil -decode tmp64 tmpcrt & exit 0
      %SIGNTOOL% sign /t http://timestamp.digicert.com /f tmpcrt /p %CSRTPW% /a bin/%Configuration%/gazebosc.exe & exit 0
      del tmp64 tmpcrt
  - cmd: cpack -V -C %Configuration%
  - ps: Push-AppveyorArtifact "gazebosc_windows_*.zip"
  - ps: $env:APPVEYOR_REPO_COMMIT=$(git rev-parse --short HEAD)
  - cmd: IF "%APPVEYOR_PULL_REQUEST_NUMBER%"=="" choco install -y winscp
  - cmd: IF "%APPVEYOR_PULL_REQUEST_NUMBER%"=="" echo open sftp://buildbot:%BBPWD%@pong.hku.nl -hostkey="ssh-ed25519 255 AdIjQaHUT94TVDcs05Vkhjr1WnhCSKNJ9rOCa0AXbDA=" > ftp.txt
  - cmd: IF "%APPVEYOR_PULL_REQUEST_NUMBER%"=="" echo put gazebosc_windows_*.zip ./public_html/gazebosc/ >> ftp.txt
  - cmd: IF "%APPVEYOR_PULL_REQUEST_NUMBER%"=="" echo exit >> ftp.txt
  - cmd: IF "%APPVEYOR_PULL_REQUEST_NUMBER%"=="" "C:\Program Files (x86)\WinSCP\winscp.com" /script=ftp.txt
#on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

test:
  none
